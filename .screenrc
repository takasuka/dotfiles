escape 
defscrollback 10000     # スクロールバッファ
startup_message off     # 起動時に著作権表示
verbose on
hardstatus alwayslastline "%{= gk}[%m/%d %02c:%s] %{gW} %-w%{= wk}%n %t%{-}%+w %=%{gk}$USER@$HOSTNAME[$LANG] (%l) "
shell zsh
defbce "on"
term xterm-256color

bind J focus down
bind K focus up
bind H focus left
bind L focus right

bind r            eval                      'command -c region' 'echo "[Region]"'
bind -c region j  eval 'resize -l -v +1'    'command -c region' 'echo "[Region] (resize -l -v +1)"'
bind -c region k  eval 'resize -l -v -1'    'command -c region' 'echo "[Region] (resize -l -v -1)"'
bind -c region h  eval 'resize -l -h -1'    'command -c region' 'echo "[Region] (resize -l -h -1)"'
bind -c region l  eval 'resize -l -h +1'    'command -c region' 'echo "[Region] (resize -l -h +1)"'
bind -c region J  eval 'resize -l -v +10'   'command -c region' 'echo "[Region] (resize -l -v +10)"'
bind -c region K  eval 'resize -l -v -10'   'command -c region' 'echo "[Region] (resize -l -v -10)"'
bind -c region H  eval 'resize -l -h -10'   'command -c region' 'echo "[Region] (resize -l -h -10)"'
bind -c region L  eval 'resize -l -h +10'   'command -c region' 'echo "[Region] (resize -l -h +10)"'
bind -c region =  eval 'resize -l ='        'command -c region' 'echo "[Region] (resize -l =)"'
bind -c region .  eval 'resize min'         'command -c region' 'echo "[Region] (resize min)"'
bind -c region _  eval 'resize max'         'command -c region' 'echo "[Region] (resize max)"'
bind -c region r  eval 'remove'             'echo "[Region] (remove)"'
bind -c region o  eval 'only'               'echo "[Region] (only)"'

bind l  eval            'command -c layout' 'layout show'
bind -c layout c eval   'layout new'    'layout show'
bind -c layout X eval   'layout remove' 'layout show'
bind -c layout A colon  'layout title '
bind -c layout N colon  'layout number '
# switch to the layout identified by number or title (not prefix of a title)
bind -c layout \' eval 'layout select' 'layout show'

# switch to other layout
bind -c layout n eval 'layout next'     'layout show'
bind -c layout p eval 'layout prev'     'layout show'
bind -c layout 0 eval 'layout select 0' 'layout show'
bind -c layout 1 eval 'layout select 1' 'layout show'
bind -c layout 2 eval 'layout select 2' 'layout show'
bind -c layout 3 eval 'layout select 3' 'layout show'
bind -c layout 4 eval 'layout select 4' 'layout show'
bind -c layout 5 eval 'layout select 5' 'layout show'
bind -c layout 6 eval 'layout select 6' 'layout show'
bind -c layout 7 eval 'layout select 7' 'layout show'
bind -c layout 8 eval 'layout select 8' 'layout show'
bind -c layout 9 eval 'layout select 9' 'layout show'
bind -c layout ^N eval 'layout next' 'command -c layout' 'layout show'
bind -c layout ^P eval 'layout prev' 'command -c layout' 'layout show'

bindkey -m ' ' eval 'stuff \040' 'writebuf $HOME/tmp/screen-exchange' 'exec !!! sh -c "cat $HOME/tmp/screen-exchange | pbcopy"'
bindkey -m Y   eval 'stuff Y'    'writebuf $HOME/tmp/screen-exchange' 'exec !!! sh -c "cat $HOME/tmp/screen-exchange | pbcopy"'
bindkey -m y   eval 'stuff y'    'writebuf $HOME/tmp/screen-exchange' 'exec !!! sh -c "cat $HOME/tmp/screen-exchange | pbcopy"'
bindkey -m W   eval 'stuff W'    'writebuf $HOME/tmp/screen-exchan
